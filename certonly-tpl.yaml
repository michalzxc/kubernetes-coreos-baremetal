#cloud-config

hostname: %HOST%
# include one or more SSH public keys
ssh_authorized_keys:
%ROOTSSHKEYS%
users:
%USERS%
write_files:
  - path: /etc/kubernetes/install.sh
    owner: "root"
    permissions: 0700
    content: |
%INSTALL_SCRIPT%
  - path: /etc/kubernetes/ssl/ca.pem
    owner: "root"
    permissions: 0600
    content: |
%CA_PEM%
  - path: /etc/kubernetes/ssl/%NODETYPE%.pem
    owner: "root"
    permissions: 0600
    content: |
%NODE_PEM%
  - path: /etc/kubernetes/ssl/%NODETYPE%-key.pem
    owner: "root"
    permissions: 0600
    content: |
%NODE_KEY_PEM%
  - path: /etc/kubernetes/ssl/etcd.pem
    owner: "root"
    permissions: 0600
    content: |
%NODE_PEM%
  - path: /etc/kubernetes/ssl/etcd-key.pem
    owner: "root"
    permissions: 0600
    content: |
%NODE_KEY_PEM%
  - path: /etc/kubernetes/ssl/accounts.pem
    owner: "root"
    permissions: 0600
    content: |
%ACCOUNTS_PEM%
  - path: /etc/kubernetes/ssl/accounts-key.pem
    owner: "root"
    permissions: 0600
    content: |
%ACCOUNTS_KEY_PEM%
  - path: /etc/systemd/system/etcd-member.service.d/20-cl-etcd-member.conf
    owner: "root"
    permissions: 0600
    content: |
%ETCDSECTION%
  - path: /etc/modules-load.d/iscsi.conf
    owner: "root"
    permissions: 0644
    content: |
      iscsi_tcp
  - path: /etc/modules-load.d/ip_vs.conf
    owner: "root"
    permissions: 0644
    content: |
      ip_vs
  - path: /etc/kubernetes/cni/docker_opts_cni.env
coreos:
  units:
    - name: update-engine.service
      mask: true
      command: stop
    - name: iscsid.service
      enable: true
      command: start
    - name: locksmithd.service
      mask: true
      command: stop
%NETSECTION%
    - name: rpc-statd.service
      command: start
      enable: true
    - name: etcd-member.service
      command: %ETCDCOMMAND%
      enable: %ETCDENABLE%
    - name: kubeinstall.service
      command: start
      content: |
        [Unit]
        Description=K8S installer

        [Service]
        TimeoutStartSec=infinity
        Type=oneshot
        Environment=ADVERTISE_IP=%ADVERTISE_IP%
        ExecStart=/etc/kubernetes/install.sh
    - name: kubeinstallhealth.service
      content: |
        [Unit]
        Description=Check if kubeinstall failed and restart
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/sh -c 'if [ ! -z "$(systemctl is-failed kubeinstall.service|grep failed)" ]; then systemctl restart kubeinstall.service; fi;'
    - name: kubeinstallhealth.timer
      content: |
        [Unit]
        Description=Run kubeinstallhealth.service every 5 minutes
        [Timer]
        OnCalendar=*:0/5
        [Install]
        WantedBy=multi-user.target
